<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Users_Model extends CI_Model
{
    
    
    function __construct()
    {
        parent::__construct();
        $this->load->helper('date');
        
    }
    
    public function fetchAgeGroups()
    {
        
        
        $this->db->select('age_group_id,age_group_name');
        $this->db->order_by('sort_order');
        $query = $this->db->get('age_group');
        
        $result = $query->result_array();
		
		$response = array(
					"result" 	=> "success",
					"message"	=> "All age groups returned",
					"response"	=> $result);
       
        return $response;
        
    }
    
    public function registerParent($pdata)
    {
        
        $data = array(
            'uname' => $this->db->escape_str($pdata['name']),
            'email_id' => $this->db->escape_str($pdata['email']),
            'gender' => $this->db->escape_str($pdata['gender']),
            'password' => $this->db->escape_str($this->encrypt->sha1($pdata['password'])),
            'user_role' => '2',
            'created_on' => date('Y-m-d H:m:i'),
            'parent_type' => 'active',
            'child_mode' => 'false'
        );
        
        $image_url = '';
        
        $this->db->select('user_id');
        $this->db->where("email_id",$pdata['email']);
        $query = $this->db->get('users');
        
        if ($query->num_rows() == 0)
        {
         
        if($pdata['profile_image']!="")
        {
            
        $parent_image = $pdata['profile_image'];
        $image_name = base64_encode($pdata['name']);
        $binary = base64_decode($parent_image);
	header("Content-Type: bitmap; charset=utf-8");
        $filename = $image_name.'_'.md5(rand(1000000,1000000000)).'.jpg';
	$file = fopen('./assets/userImages/'.$filename, "wb"); 
        fwrite($file, $binary);     
        $profile_image = 'assets/userImages/'.$filename;
            
        $data['profile_image'] = $profile_image;
        $image_url = base_url().$profile_image;
        
        }
        $this->db->insert('users', $data);
        $parent_id = $this->db->insert_id();
        
        return array(
            "result" => "success",
            "message" => "Registration Successfull.",
            "response" => array(
                    "parent_id" => $parent_id,
                    "user_name" => $pdata['name'],
                    "image_url" => $image_url
                    )
        );
        
       }
       else
       {
           
           return array(
            "result" => "error",
            "message" => "Email Id Already Exists"
        );
           
       }
       
    }
    
    
    public function addChild($pdata)
    {
        
        
        $data = array(
            'uname' => $this->db->escape_str($pdata['child_name']),
            'gender' => $this->db->escape_str($pdata['gender']),
            'password' => $this->db->escape_str($this->encrypt->sha1($pdata['password'])),
            'user_role' => 3,
            'age' => $pdata['child_age'],
            'age_group' => $pdata['age_group'],
            'parent_id' => $pdata['parent_id'],
            'password_autogenerated' => $pdata['password_autogenerated'],
            'created_on' => date('Y-m-d H:m:i'),
            'child_mode' => 'true'
        );
        
        
        $image_url = '';
        
        $this->db->select('user_id');
        $this->db->where("user_id",$pdata['parent_id']);
        $query = $this->db->get('users');
        
        if ($query->num_rows() > 0)
        {
            
        $this->db->select('user_id');
        $this->db->where("uname",$pdata['child_name']);
        $this->db->where("parent_id",$pdata['parent_id']);
        $query2 = $this->db->get('users');    
       
        if ($query2->num_rows() == 0)
        {
         
        if($pdata['profile_image']!="")
        {
            
        $child_image = $pdata['profile_image'];
        $image_name = base64_encode($pdata['child_name']);
        $binary = base64_decode($child_image);
	header("Content-Type: bitmap; charset=utf-8");
        $filename = $image_name.'_'.md5(rand(1000000,1000000000)).'.jpg';
	$file = fopen('./assets/userImages/'.$filename, "wb"); 
        fwrite($file, $binary);     
        $profile_image = 'assets/userImages/'.$filename;
            
        $data['profile_image'] = $profile_image;
        $image_url = base_url().$profile_image;
        
        }
        $this->db->insert('users', $data);
        $parent_id = $this->db->insert_id();
        
        return array(
            "result" => "success",
            "message" => "Child Added Successfully"
        );
        }
        else 
        {
      
             return array(
            "result" => "error",
            "message" => "Child Name already exists under the parent"
        );
     
        }
       }
       else
       {
           
           return array(
            "result" => "error",
            "message" => "Given Parent Id not Found"
        );
           
       }
        
        
    }
    
    
    public function loginCheck($pdata)
    {
        
        $this->db->select('user_id,profile_image,uname');
        $this->db->where("email_id",$pdata['email']);
        $this->db->where("password",$this->encrypt->sha1($pdata['password']));
        $this->db->where("user_role",2);
        $query = $this->db->get('users');
        
        $profile_image = '';
        
        if ($query->num_rows() > 0)
        {
            
         $db_data_arr = $query->result_array();  
         $db_data = $db_data_arr[0];
         //print_r($db_data);exit;
         
       /* $this->db->select('login_id');   // Commented temporarily for dev purpose. Now there is no login restriction. After dev , these lines need to be uncommented.
        $this->db->where("parent_id",$db_data['user_id']);
        $query2 = $this->db->get('login_session');    
            
        if ($query2->num_rows() < 5)
        {
         
        $data = array(
            'parent_id' => $this->db->escape_str($db_data['user_id']),
            'device_id' => $this->db->escape_str($pdata['device_id']),
            'last_login' => date('Y-m-d H:m:i')
        );    
        
        $this->db->insert('login_session', $data);*/
        
        if($db_data['profile_image']!='')
        {
           $profile_image = base_url().$db_data['profile_image'];
        }
        
        return array(
            "result" => "success",
			"message" => "Successfully logged in.",
            "response" => array('parent_id' => $db_data['user_id'],'user_name' => $db_data['uname'],'profile_image' => $profile_image )
        );
       /* }
        else 
        {
      
             return array(
            "result" => "error",
            "message" => "Maximum number of allowed session per user is 5. Please logout from any device and try again."
        );
     
        }*/
       }
       else
       {
           
           return array(
            "result" => "error",
            "message" => "Email or Password is wrong. Please try again"
        );
           
       }
        
        
    }
    
    
    public function resetPassword($pdata)
    {
        
        
        $this->db->select('user_id');
        $this->db->where("email_id",$pdata['email']);
        $query = $this->db->get('users');
        
        if($query->num_rows() > 0)
        {
            
           return array(
            "result" => "success",
            "message" => "Please check your email regarding the password reset."
            );
            
        }
        else
        {
            
           return array(
            "result" => "error",
            "message" => "The Given email not found in our records"
            ); 
            
        }    
        
        
        
    }
    
    
    public function logoutDevice($pdata)
    {
        
        $this->db->where("parent_id",$pdata['parent_id']);
        $this->db->where("device_id",$pdata['device_id']);
        $query = $this->db->delete('login_session');
        
        if($this->db->affected_rows() > 0)
        {
            
           return array(
            "result" => "success",
            "message" => "You have been Successfully Logged Out."
            );
            
        }
        else
        {
            
           return array(
            "result" => "error",
            "message" => "The Given Device Id or Parent Id not found"
            ); 
            
        }    
        
        
        
    }
	
	public function getChildsByParent($pdata) {
		$parent_id = $pdata['parent_id'];
		
		$this->db->select('*')->from('users')->where(array("user_role" => "3", "parent_id" => $parent_id));
        $this->db->join('age_group', 'age_group.age_group_id = users.age_group');
		//$this->db->order_by('users.age_group', 'ASC');
        $query = $this->db->get();
        $allchilds = $query->result_array();
        
        $this->db->select('*')->from('users')->where(array("user_id" => $parent_id));
        $parentQuery = $this->db->get();
        $parentInfo = $parentQuery->row_array();
        
        //$result['parentInfo'] = $parentInfo;
        
        //Check Parent Profile Image
		$parentImg = "";
		if($parentInfo['profile_image'] != '')
		{
			$parentImg = base_url().$parentInfo['profile_image'];
		}
		         
        $result['parent_info'] = array("user_id" => $parentInfo['user_id'], "uname" => $parentInfo['uname'], "email_id" => $parentInfo['email_id'], "profile_image" =>$parentImg);					
		//
		// Age Groups
		$this->db->select('*')->order_by('sort_order');
        $query = $this->db->get('age_group');
        
        $age_groups = $query->result_array();
		foreach($age_groups as $age_group):
			
			$child_by_age_group = array();
			foreach($allchilds as $child) {
				
				if ($child['age_group'] == $age_group['age_group_id']) {
					//Check Child Profile Image
					$childImg = '';
					if($child['profile_image'] != '')
					{
						$childImg = base_url().$child['profile_image'];
					}
					
					$password_required= 'false';
					if($child['password_required'] != '')
					{
						$password_required = 'true';
					}
					$child_by_age_group[] = array("user_id" => $child['user_id'], "uname" => $child['uname'], "gender" => $child['gender'], "profile_image" =>$childImg, "age" => $child['age'], "parent_id" => $child['parent_id'], "child_mode" => $child['child_mode'], "parent_type" => $child['parent_type'], "password_autogenerated" => $child['password_autogenerated'], "password" => $child['password']);
					
				}
				
			}
			$result[$age_group["age_group_id"]] = array("age_group_name" => $age_group["age_group_name"], "child" => $child_by_age_group);
		endforeach;
		
		$response = array("result" => "success",
							"message" => "Child list for given parent id",
							"response" => $result
							);
		return $response;
	}
    
    
    
    
    
    
}
?>